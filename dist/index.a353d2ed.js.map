{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const pages = {\n    about: {\n        id: 'about',\n        path: '/about',\n        title: 'About'\n    },\n    projects: {\n        id: 'projects',\n        path: '/projects',\n        title: 'Projects'\n    },\n    resume: {\n        id: 'resume',\n        path: '/resume',\n        title: 'Resume'\n    },\n    testimonials: {\n        id: 'testimonials',\n        path: '/testimonials',\n        title: 'Testimonials'\n    },\n    contact: {\n        id: 'contact',\n        path: '/contact',\n        title: 'Contact'\n    },\n}\nconst contentClasses = {\n    hidden: 'cont_hidden',\n    animate: 'cont_animate'\n}\n\n/**\n * Main\n */\n$(function () {\n    // Append editable css\n    $(\"head\").append('<style></style>');\n\n    // Get url path on landing\n    let page = Object.entries(pages).find(([key, value]) => value.path === window.location.pathname);\n    if (Array.isArray(page)) page = page[0];\n    if (typeof page === 'string') page = pages[page];\n    if (page === undefined) page = pages.about;\n\n    // Navigate to path on load\n    if ($('#top-nav').css('display') === 'none') {\n        navigateMobile({\n            page,\n            search: window.location.search,\n        });\n    } else {\n        navigateDesktop({\n            page,\n            search: window.location.search,\n        });\n    }\n\n    // Routes for top nav bar\n    $('.top-nav_btn').on('click', null, null, function () {\n        // Don't do anything if it's already selected\n        if ($(this).hasClass('top-nav_btn_selected')) return;\n        const id = $(this).attr('value');\n        navigateDesktop({page: pages[id]})\n    });\n\n    // Routes for top nav bar\n    $('.bottom-nav_btn').on('click', null, null, function () {\n        // Don't do anything if it's already selected\n        if ($(this).hasClass('top-nav_btn_selected')) return;\n        const id = $(this).attr('value');\n        navigateMobile({page: pages[id]})\n    });\n});\n\n// Trigger nav and update graphics for mobile dimension\nfunction navigateMobile({page: {id, path, title}, search}) {\n    const content = $('#page_content');\n    const button = $(`#bottom-nav_${id}`);\n    const buttons = $('.bottom-nav_btn');\n    const icon = $(`#bottom-nav_icon_${id}`);\n    const icons = $('.bottom-nav_icon');\n    const topTitle = $('#top_title');\n    const topTitleText = $('#top_title_text');\n    const prevButtonText = $('.bottom-nav_btn_selected').attr('value');\n    const styles = $('body').get(0).style;\n\n    // Select new nav button\n    buttons.addClass('bottom-nav_btn_unselected');\n    buttons.removeClass('bottom-nav_btn_selected');\n    button.removeClass('bottom-nav_btn_unselected');\n    button.addClass('bottom-nav_btn_selected');\n    icons.removeClass('bottom-nav_icon_image_selected');\n    icon.addClass('bottom-nav_icon_image_selected');\n\n    // Reset title animation\n    styles.setProperty('--title-origin-color', content.css('background-color'));\n    styles.setProperty('--title-destination-color', button.css('background-color'));\n    styles.setProperty('--title-origin-content', `'${prevButtonText ? pages[prevButtonText].title : ''}'`);\n    styles.setProperty('--title-destination-content', `'${title}'`);\n    topTitle.removeClass('top_title_refresh_animation');\n    topTitleText.removeClass('top_title_text_refresh_animation');\n\n    // Update path + shared stuff\n    navigate({\n        path, title, search,\n        button\n    });\n\n    // Refresh title\n    topTitle.addClass('top_title_refresh_animation');\n    topTitleText.addClass('top_title_text_refresh_animation');\n}\n\n// Trigger nav and update graphics for desktop dimension\nfunction navigateDesktop({page: {id, path, title}, search}) {\n    const content = $('#page_content');\n    const button = $(`#top-nav_${id}`);\n    // Update selected button and add new content\n    $('.top-nav_btn').removeClass('top-nav_btn_selected');\n    button.addClass('top-nav_btn_selected')\n\n    // Update path + shared stuff\n    navigate({\n        path, title, search,\n        button\n    });\n\n    // Update top-nav color\n    $('#top-nav').css('background-color', content.css('background-color'))\n}\n\n// Push a new path and update document metadata\nfunction navigate({path, title, search, button}) {\n    const content = $('#page_content');\n    const background = $('#page_bg');\n    const customCss = $(\"head\").children(':last');\n\n    // Scroll bg\n    // Get starting width (inherited from button)\n    // create animated keyfraes for expand\n    customCss.html(`\n    .cont_visible {\n        transform: translateX(${button[0].getBoundingClientRect().x}px)\n            scale(${button[0].getBoundingClientRect().width / $(window).width()}, 0);\n    }\n    @keyframes expand {\n        from {\n            transform: translateX(${button[0].getBoundingClientRect().x}px)\n                scale(${button[0].getBoundingClientRect().width / $(window).width()}, 0);\n        }\n        to {\n            transform: translateX(0) scale(1, 1);\n        }\n    `);\n\n    // Strip animation\n    content.removeClass(contentClasses.animate);\n\n    // Update path\n    window.history.pushState(window.history.state,\n        title,\n        `${path}${search ? search : ''}`);\n    // Update page title\n    document.title = `${title} | Alex Meddin`;\n\n    // Update content\n    // Shift to bg\n    background.css('background-color', content.css('background-color'))\n    background.html(content.innerHTML);\n\n    // Strip styling\n    content.empty();\n    content.addClass(contentClasses.hidden);\n\n    content.css('background-color', button.css('background-color'));\n\n    // Add styling\n    content.removeClass(contentClasses.hidden);\n    content.addClass(contentClasses.animate);\n\n    // Load new content\n    content.load(`pages${path}/index.html`);\n}"],"names":["pages","about","id","path","title","projects","resume","testimonials","contact","contentClasses","hidden","animate","navigateMobile","page","search","content","$","button","buttons","icon","icons","topTitle","topTitleText","prevButtonText","attr","styles","get","style","addClass","removeClass","setProperty","css","navigate","navigateDesktop","background","children","html","getBoundingClientRect","x","width","window","history","pushState","state","document","append","Object","entries","find","key","value","location","pathname","Array","isArray","undefined","on","this","hasClass"],"version":3,"file":"index.a353d2ed.js.map"}